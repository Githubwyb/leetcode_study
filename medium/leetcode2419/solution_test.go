package main

import (
	"fmt"
	"testing"
)

func TestSolution(t *testing.T) {
	type testCase struct {
		nums []int
		Want int
	}

	testGroup := []testCase{
		{[]int{1, 2, 3, 3, 2, 2}, 2},
		{[]int{1, 2, 3, 4}, 1},
		{[]int{1, 2, 3, 3, 2, 2}, 2},
		{[]int{311155, 311155, 311155, 311155, 311155, 311155, 311155, 311155, 201191, 311155}, 8},
		{[]int{378034, 378034, 378034}, 3},
		{[]int{}, 1},
	}

	for i, v := range testGroup {
		result := longestSubarray(v.nums)
		if result != v.Want {
			t.Fatalf("%d, v %v expect '%v' but '%v'", i, v, v.Want, result)
		}
		fmt.Println(i, "result", result)
	}
}
